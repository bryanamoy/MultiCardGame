package edu.buffalo.cse116;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

public class SolitaireView {
	private Card card;
	private HashMap<Card, ImageView> cardImages;

	public SolitaireView() throws FileNotFoundException {
	}
	
	HashMap<Card, ImageView> setCardImages() throws FileNotFoundException {
		File file = new File("modern.zip");
		InputStream ifs = new FileInputStream(file);
		ZipInputStream zip = new ZipInputStream(ifs);
		try {
			ZipEntry entry = zip.getNextEntry();
			ZipEntry trav = entry;
			while(zip.getNextEntry() != null) {
				if(entry.getName().endsWith(".png")) {
					System.out.println(entry.getName());
					String cardImageFile = entry.getName().substring(0, entry.getName().indexOf(".") - 1);
					for(Suit suit : Suit.values()) {
						for(Rank rank : Rank.values()) {
							card = new Card(suit, rank);
							if(cardImageFile == suit.toString() + rank.toString()) {
								 Image image = new Image (cardImageFile + ".png", true);
								 ImageView imageView = new ImageView(image);
								 cardImages.put(card, imageView);
								 zip.getNextEntry();
							}
						}
					}

				}
			}
			zip.close();
			ifs.close();

		} catch (IOException e) {
			e.printStackTrace();
			System.out.println("Next entry does not exist!");
		}
		return cardImages;
	}

	ImageView getCardImage(Card card) {
		
		return cardImages.get(card);
	}
	

}
